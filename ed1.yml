name: üöÄ CI/CD: Deploy Multiple Scheduled Triggered WebJobs

on:
  push:
    branches:
      - main  # or your deployment branch

env:
  PROJECT_PATH: 'WebJob/WebJob.csproj'
  CONFIGURATION: 'Release'
  BUILD_OUTPUT_DIR: '${{ github.workspace }}\WebJob\bin\Release'
  TARGET_ROOT: '${{ github.workspace }}\publish_output\app_data\jobs\triggered'
  ZIP_PATH: '${{ github.workspace }}\publish_output\webjobs.zip'

jobs:
  deploy-webjobs:
    runs-on: windows-latest

    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4

    - name: üõ†Ô∏è Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: üõ†Ô∏è Setup NuGet
      uses: NuGet/setup-nuget@v1

    - name: üîÉ Restore NuGet Packages
      run: nuget restore ${{ env.PROJECT_PATH }}

    - name: üèóÔ∏è Build the WebJob Console App
      run: |
        msbuild ${{ env.PROJECT_PATH }} `
          /p:Configuration=${{ env.CONFIGURATION }} `
          /p:OutputPath=${{ env.BUILD_OUTPUT_DIR }}

    - name: üìÇ Clone Job with Different Schedules
      shell: pwsh
      env:
        SCHEDULED_JOBS: ${{ vars.SCHEDULED_JOBS }}
      run: |
        $jobs = $env:SCHEDULED_JOBS | ConvertFrom-Json
        $baseOutput = "${{ env.BUILD_OUTPUT_DIR }}"
        $targetRoot = "${{ env.TARGET_ROOT }}"

        New-Item -Path $targetRoot -ItemType Directory -Force

        foreach ($job in $jobs) {
          $target = Join-Path $targetRoot $job.Name
          New-Item -ItemType Directory -Path $target -Force

          Write-Output "üìÇ Creating folder for $($job.Name)..."

          # Copy files
          Copy-Item "$baseOutput\*" -Destination $target -Recurse

          # Add run.cmd
          $exe = Get-ChildItem "$target" -Filter "*.exe" | Select-Object -First 1
          $runCmd = "@echo off`n$($exe.Name)"
          Set-Content -Path (Join-Path $target "run.cmd") -Value $runCmd

          # Add settings.job
          $settings = @{ schedule = $job.Cron } | ConvertTo-Json -Depth 2
          Set-Content -Path (Join-Path $target "settings.job") -Value $settings
        }

    - name: üóúÔ∏è Zip the WebJobs folder
      run: |
        Compress-Archive `
          -Path "${{ github.workspace }}\publish_output\*" `
          -DestinationPath "${{ env.ZIP_PATH }}"

    - name: üöÄ Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.ZIP_PATH }}
